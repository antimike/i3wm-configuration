# i3-gaps
smart_gaps on
smart_gaps inverse_outer
# smart_borders on
smart_borders no_gaps
hide_edge_borders smart_no_gaps

# i3 config file (v4)

set $mod Mod4
set $alt Mod1
set $up k
set $down j
set $left h
set $right l
# set $term vbeterm
set $term kitty
# set $mediaplayer spotify

# font pango:Iosevka Aile 9
font pango:monospace 10

# Style and colors
default_border pixel 3
default_floating_border pixel 3
# class                 border  backgr. text    indicator child_border
client.focused          #ffaf00 #cc5c00 #ffffff #ffdf11   #cc5c00
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #d00000 #ffffff #d00000   #d00000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
client.background       #ffffff

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindsym $mod+Shift+d exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# dmenu for passwords: copies password into clipboard
bindsym $mod+Shift+p exec --no-startup-id passmenu

# Audio
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id exec pactl set-sink-volume @DEFAULT_SINK@ +5% && refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id exec pactl set-sink-volume @DEFAULT_SINK@ -5% && refresh_i3status
bindsym XF86AudioMute        exec --no-startup-id exec pactl set-sink-mute @DEFAULT_SINK@ toggle && refresh_i3status
bindsym XF86AudioMicMute     exec --no-startup-id exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && refresh_i3status
bindsym XF86AudioPlay        exec --no-startup-id exec playerctl -p $mediaplayer play-pause && refresh_i3status
bindsym XF86AudioPause       exec --no-startup-id exec playerctl -p $mediaplayer pause && refresh_i3status
bindsym XF86AudioStop        exec --no-startup-id exec playerctl -p $mediaplayer stop && refresh_i3status && refresh_i3status
bindsym XF86AudioNext        exec --no-startup-id exec playerctl -p $mediaplayer next && refresh_i3status
bindsym XF86AudioPrev        exec --no-startup-id exec playerctl -p $mediaplayer previous && refresh_i3status
bindsym $mod+p exec --no-startup-id exec ~/.config/i3/bin/rofi-mediaplayer $mediaplayer

# Brightness
# bindsym XF86MonBrightnessUp exec --no-startup-id exec brightnessctl set +5%
# bindsym XF86MonBrightnessDown exec --no-startup-id exec brightnessctl set 5%-
# TODO: Look into brightnessctl as light replacement

# Use light to adjust screen and keyboard backlight brightness.
set $backlight_inc 1
set $kbd_backlight "$(light -L | grep kbd | sed 's/^[[:space:]]//')"
bindsym XF86KbdBrightnessDown exec --no-startup-id light -s $kbd_backlight -U $backlight_inc
bindsym XF86KbdBrightnessUp exec --no-startup-id light -s $kbd_backlight -A $backlight_inc
bindsym XF86MonBrightnessDown exec --no-startup-id light -U $backlight_inc
bindsym XF86MonBrightnessUp exec --no-startup-id light -A $backlight_inc

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# execute command
set $rofi exec rofi -modi drun -show drun -show-icons -drun-match-fields name
bindsym $mod+o      exec --no-startup-id $rofi
bindsym XF86LaunchA exec --no-startup-id $rofi

# change focus
bindsym $mod+$left  focus left
bindsym $mod+$down  focus down
bindsym $mod+$up    focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left  move left
bindsym $mod+Shift+$down  move down
bindsym $mod+Shift+$up    move up
bindsym $mod+Shift+$right move right
bindsym $mod+Ctrl+o      move container to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# resize focused window
# bindsym $mod+Ctrl+$left  resize shrink width 10 px or 4 ppt
# bindsym $mod+Ctrl+$down  resize grow height 10 px or 4 ppt
# bindsym $mod+Ctrl+$up    resize shrink height 10 px or 4 ppt
# bindsym $mod+Ctrl+$right resize grow width 10 px or 4 ppt
# resize window (you can also use the mouse for that)

mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# split in horizontal orientation
bindsym $mod+$alt+h split h

# split in vertical orientation
bindsym $mod+$alt+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+Shift+f fullscreen toggle global

# change container layout (tabbed, toggle split)
# bindsym $mod+w layout toggle splitv splith tabbed
# bindsym $mod+v split toggle
# Original:
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+b focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# default workspace layout: tabbed
workspace_layout tabbed

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Tab nop "previous-workspace"
bindsym $mod+$alt+o focus output right
bindsym $mod+n nop "new-workspace"
focus_wrapping no

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+o  move workspace to output right
bindsym $mod+Shift+n nop "move-to-new-workspace"

# reload/restart
# TODO: Figure out WTF
# bindsym $mod+Shift+c exec --no-startup-id exec systemctl --user reload --no-block i3.service
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Escape exec "loginctl lock-session"

# Lock screen and print screen
# TODO: Investigate xset and Print bindings on macbook
# bindsym XF86ScreenSaver exec --no-startup-id exec xset s activate
# bindsym $mod+Delete exec --no-startup-id exec xset s activate
# bindsym Print exec --no-startup-id exec ~/.config/i3/bin/screenshot window
# bindsym $mod+Print exec --no-startup-id exec ~/.config/i3/bin/screenshot desktop

# Quake window
bindsym $mod+grave nop "quake-console:$term:QuakeConsoleNeedsUniqueName:0.3"

# Get info about container/workspace
bindsym $mod+i nop "container-info"
bindsym $mod+Shift+i nop "workspace-info"

# Random rules
no_focus [window_type="splash"]
for_window [tiling] border pixel 3
for_window [class="Nm-connection-editor"] floating enable
for_window [class="Shadow"] fullscreen enable
for_window [window_role="PictureInPicture"] floating enable
for_window [title="Firefox — Sharing Indicator"] border pixel 1, sticky enable, move position 20 ppt -5 px
no_focus [title="Firefox — Sharing Indicator"]

# Start stuff
# TODO: Replace default layout-loading code from cloned repo with my own (ewwww...emacs)
# exec_always --no-startup-id exec systemctl --user start --no-block i3-session.target
# exec --no-startup-id exec i3-msg "\
#   workspace number 1; append_layout ~/.config/i3/ws-emacs.json; exec exec emacs; exec exec $term; exec exec $term; \
#   workspace number 2; exec nm-online -q -t 5 && exec firefox; \
#   workspace number 1"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
